[network]
peer_key_file = "{{ state_path }}/peer_key.dat"
listen_addresses = [
    "/ip4/{{ listen_ip }}/tcp/{{ port }}/ws",
]
allow_loopback_addresses = true
dht_quorum = 3

{% if seed_addresses is defined %}
seed_nodes = [
    {% for seed_address in seed_addresses %}
        {{ '{' }} address = "{{ seed_address }}" {{ '}' }},
    {% endfor %}
]

{% endif %}
desired_peer_count = {{ min_peers }}

[consensus]
network = "dev-albatross"
sync_mode = "{{ sync_mode }}"
min_peers = {{ min_peers }}

[database]
path = "{{ state_path }}"

[log]
level = "trace"
timestamps = true

{% if loki is not none %}
[log.loki]
url = "{{ loki['url'] }}"

    {% if loki.labels %}
[log.loki.labels]
        {% for label in loki['labels'] %}
{{ label }} = "{{ loki['labels'][label] }}"
        {% endfor %}
    {% endif %}
    {% if loki.extra_fields %}
[log.loki.extra_fields]
        {% for extra_field in loki['extra_fields'] %}
{{ extra_field }} = "{{ loki['extra_fields'][extra_field] }}"
        {% endfor %}
    {% endif %}

{% endif %}
[log.tags]
libp2p_swarm = "debug"
lock_api = "trace"

{% if rpc is not none %}
[rpc-server]
bind="{{ rpc['ip'] }}"
port = {{ rpc['port'] }}

{% endif %}
{% if metrics is not none %}
[metrics-server]
bind="{{ metrics['ip'] }}"
port = {{ metrics['port'] }}

{% endif %}
{% if validator is defined %}
[validator]
automatic_reactivate = true
validator_address = "{{ validator['validator_address'] }}"
signing_key_file = "{{ state_path }}/signing_key.dat"
signing_key = "{{ validator['signing_key'] }}"
voting_key_file = "{{ state_path }}/voting_key.dat"
voting_key = "{{ validator['voting_key'] }}"
fee_key_file = "{{ state_path }}/fee_key.dat"
fee_key = "{{ validator['fee_key'] }}"
{% endif %}
{% if spammer is defined %}
[validator]
validator_address = "NQ07 0000 0000 0000 0000 0000 0000 0000 0000"
signing_key_file = "{{ state_path }}/signing_key.dat"
voting_key_file = "{{ state_path }}/voting_key.dat"
fee_key_file = "{{ state_path }}/fee_key.dat"
{% endif %}
